#!/bin/bash

test_prog_path_1=$1
test_prog_path_2=$2
name_test_prog_with_ext=$(basename "$test_prog_path")
name_test_prog="${name_test_prog_with_ext%.*}"
entry_point=$3
func_to_test=$4

readonly s1="oldsummary"
readonly s2="newsummary"

ocamlfind ocamlopt -o signature_parser -linkpkg -package cil signature_parser.ml

touch function_signature
./signature_parser $test_prog_path_1 $func_to_test > function_signature

touch result
(cat function_signature | racket generate_constants.rkt) > result 

./generate_summary $test_prog_path_1 $entry_point $func_to_test $s1 >> result
./generate_summary $test_prog_path_2 $entry_point $func_to_test $s2 >> result

((echo $s1; echo $s2; cat function_signature) | racket generate_assert.rkt) >> result

echo ""
echo "To be verified:"

cat result

echo ""
echo "Result:"

z3 -smt2 result

rm function_signature
rm result
