#!/bin/bash

test_prog_path=$1
name_test_prog_with_ext=$(basename "$test_prog_path")
name_test_prog="${name_test_prog_with_ext%.*}"
entry_point=$2
func_to_test=$3

# This should go in a Makefile!
# Generate klee executable
clang -I ../../include -emit-llvm -c -g $test_prog_path
klee -entry-point=$entry_point --write-smt2s "${name_test_prog}.bc"
#sig="$(grep -Eri "^\s*((unsigned|signed)\s+)?(void|int|char|short|long|float|double)\s+$entry_point" $test_path_prog)"
#sig_without_filename=${sig#*".c:"}
#racket test.rkt "$sig_without_filename"

# Or provide binary beforehand so user doesn't have to install ocaml.
ocamlfind ocamlopt -o signature_parser -linkpkg -package cil signature_parser.ml

mv klee-last/*.smt2 .
./signature_parser $test_prog_path $func_to_test | racket smtcond.rkt
mv *.smt2 klee-last/
